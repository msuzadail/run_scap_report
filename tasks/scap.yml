---
# file: scap.yml

- name: Install SCAP Packages
  yum:
    name: openscap-scanner, scap-security-guide, httpd
    state: present
  tags:
    - scap

- name: Enable httpd
  service:
    name: httpd
    state: started
    enabled: true

- name: Ensure the Reports Directory Exists
  file:
    path: /tmp/scap_reports
    state: directory
    mode: 0700
    owner: root
    group: root
  tags:
    - scap

- name: Run an SCAP scan and Generate Report EL 7
  command: /usr/bin/oscap xccdf eval --profile "{{ item }}" --results /tmp/scap_reports/scan-xccdf-results-{{ ansible_date_time.iso8601  }}-{{ item }}.xml --fetch-remote-resources --report /tmp/scap_reports/scan-xccdf-report-{{ ansible_date_time.iso8601  }}-{{ item }}.html  /usr/share/xml/scap/ssg/content/ssg-rhel{{ ansible_distribution_major_version }}-xccdf.xml
  register: result
#  async: 1000
#  poll: 5 
  loop: "{{ scap_profile_7 }}"
  loop_control:
    loop_var: "item"
  when: ansible_distribution_major_version == "7"
  tags:
    - scap
    - scan

- name: determine the most recent scap report
  command: ls -tr /tmp/scap_reports/
  register: results
  tags:
    - scap

- name: create the scap directory in the web server content
  file:
    name: /var/www/html/scap
    state: directory
    mode: 0755
  tags:
    - scap

- name: copy SCAP reports to the web server content directory
  copy:
    remote_src: True
    src: "/tmp/scap_reports/{{ item }}"
    dest: /var/www/html/scap
    mode: 0644
  with_items: "{{ results.stdout_lines }}"
  when: item | match("scan-xccdf-report-*")
  tags:
    - scap

...
